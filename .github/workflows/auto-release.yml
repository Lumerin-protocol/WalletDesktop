name: Auto Release

on:
  push:
    tags:
      - "*"

env:
  CI: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        environment: [dev]
        target: [ubuntu, windows, macos, macos-arm]
        include:
          - target: ubuntu
            os: ubuntu-latest
            artifact_name: lumerin-wallet-desktop_v${{github.ref_name}}.deb
            asset_name: lumerin_v${{github.ref_name}}.deb
          - target: windows
            os: windows-latest
            artifact_name: lumerin-wallet-desktop_v${{github.ref_name}}.exe
            asset_name: lumerin_v${{github.ref_name}}.exe
          - target: macos
            os: macos-latest
            artifact_name: lumerin-wallet-desktop_v${{github.ref_name}}.dmg
            asset_name: lumerin_v${{github.ref_name}}.dmg
          - target: macos-arm
            os: macos-latest
            arch: arm
            artifact_name: lumerin-wallet-desktop_v${{github.ref_name}}.dmg
            asset_name: lumerin_v${{github.ref_name}}_arm.dmg
    runs-on: ${{ matrix.os }}
    environment: ${{ matrix.environment }}
    env:
      CHAIN_ID: ${{ secrets.CHAIN_ID }}
      EXPLORER_URL: ${{ secrets.EXPLORER_URL }}
      DISPLAY_NAME: ${{ secrets.DISPLAY_NAME }}
      SYMBOL: ${{ secrets.SYMBOL }}
      PROXY_ROUTER_URL: ${{ secrets.PROXY_ROUTER_URL }}
      COIN_DEFAULT_GAS_LIMIT: ${{ secrets.COIN_DEFAULT_GAS_LIMIT }}
      MAX_GAS_PRICE: ${{ secrets.MAX_GAS_PRICE }}
      LMR_DEFAULT_GAS_LIMIT: ${{ secrets.LMR_DEFAULT_GAS_LIMIT }}
      DEFAULT_GAS_PRICE: ${{ secrets.DEFAULT_GAS_PRICE }}
      REQUIRED_PASSWORD_ENTROPY: ${{ secrets.REQUIRED_PASSWORD_ENTROPY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install packages
        run: npm install
      - name: Postinstall
        if: matrix.target == 'macos-arm'
        run: npm run postinstallMacDist
      - name: Set env from github
        run: |
          echo "CHAIN_ID=$CHAIN_ID" >> .env
          echo "EXPLORER_URL=$EXPLORER_URL" >> .env
          echo "DISPLAY_NAME=$DISPLAY_NAME" >> .env
          echo "SYMBOL=$SYMBOL" >> .env
          echo "PROXY_ROUTER_URL=$PROXY_ROUTER_URL" >> .env
          echo "COIN_DEFAULT_GAS_LIMIT=$COIN_DEFAULT_GAS_LIMIT" >> .env
          echo "MAX_GAS_PRICE=$MAX_GAS_PRICE" >> .env
          echo "LMR_DEFAULT_GAS_LIMIT=$LMR_DEFAULT_GAS_LIMIT" >> .env
          echo "DEFAULT_GAS_PRICE=$DEFAULT_GAS_PRICE" >> .env
          echo "REQUIRED_PASSWORD_ENTROPY=$REQUIRED_PASSWORD_ENTROPY" >> .env
          echo "NODE_ENV=production" >> .env
        shell: bash
      - name: Set env from gitlab
        run: |
          variables=("LUMERIN_TOKEN_ADDRESS" "CLONE_FACTORY_ADDRESS" "ETH_NODE_ADDRESS" "PROXY_ROUTER_URL")
          curl --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_GROUP_TOKEN }}" "https://gitlab.com/api/v4/groups/${{ secrets.GITLAB_GROUP_ID }}/variables?per_page=1000" | jq -c '.[]' | 
            while IFS= read -r line; do
              scope=$(<<<"$line" jq -r .environment_scope);
              if [ "${scope}" = "${{ matrix.environment }}" ] || [ "${scope}" = '*' ]
              then
                key=$(<<<"$line" jq -r .key);
                if [[ " ${variables[*]} " =~ " ${key} " ]]; then
                 value=$(<<<"$line" jq -r .value);
                 echo "$key=$value" >> .env
                fi
              fi
            done
        shell: bash
      - name: Fetch latest Proxy Router
        run: |
          if [ "${{ matrix.target }}" = "ubuntu" ]
          then
            namePrefix="Linux_x86_64"
          elif [ "${{ matrix.target }}" = "windows" ]
          then
            namePrefix="Windows_x86_64"
          elif [ "${{ matrix.target }}" = "macos-arm" ]
          then
            namePrefix="Darwin_arm64"
          elif [ "${{ matrix.target }}" = "macos" ]
          then
            namePrefix="Darwin_x86_64"
          fi
          echo "name suffix $namePrefix"
          curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/Lumerin-protocol/hash-router/releases/latest | jq -c '.assets[]'
          curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/Lumerin-protocol/hash-router/releases/latest | jq -c '.assets[]' |
            while IFS= read -r line; do
              echo "line $line"
              name=$(<<<"$line" jq -r .name);
              echo "name $name"
              if grep -q "$namePrefix" <<< "$name"
              then
                downloadUrl="$(<<<"$line" jq -r .browser_download_url)";
                echo "downloadUrl $downloadUrl"
                if [ "${namePrefix}" = 'Windows_x86_64' ]; then
                  curl -o "$GITHUB_WORKSPACE/executables/proxy-router.exe" $downloadUrl -L
                else
                  curl -o "$GITHUB_WORKSPACE/executables/proxy-router" $downloadUrl -L
                fi
              fi
            done
        shell: bash
      - name: Build Web
        run: npm run web-build
      - name: Build Mac
        if: matrix.target == 'macos'
        run: npm run desktop-build-mac
      - name: Build Mac arm
        if: matrix.target == 'macos-arm'
        run: npm run desktop-build-mac-arm
      - name: Build Linux
        if: matrix.target == 'ubuntu'
        run: npm run desktop-build-linux
      - name: Build Windows
        if: matrix.target == 'windows'
        run: npm run desktop-build-win
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          tag: ${{ github.ref }}
          asset_name: ${{ matrix.environment }}-${{ matrix.asset_name }}
