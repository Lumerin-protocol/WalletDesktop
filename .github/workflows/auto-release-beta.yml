name: Auto Release Development

on:
  push:
    tags:
      - "*-beta"

env:
  CI: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        environment: [dev]
        target: [ubuntu, windows, macos, macos-arm]
        include:
          - target: ubuntu
            os: ubuntu-latest
            artifact_name: lumerin-wallet-desktop.deb
            asset_name: lumerin_v${{github.ref_name}}.deb
          - target: windows
            os: windows-latest
            artifact_name: lumerin-wallet-desktop.exe
            asset_name: lumerin_v${{github.ref_name}}.exe
          - target: macos
            os: macos-latest
            artifact_name: lumerin-wallet-desktop.dmg
            asset_name: lumerin_v${{github.ref_name}}.dmg
          - target: macos-arm
            os: macos-latest
            artifact_name: lumerin-wallet-desktop.dmg
            asset_name: lumerin_v${{github.ref_name}}_arm.dmg
    runs-on: ${{ matrix.os }}
    environment: ${{ matrix.environment }}
    env:
      CHAIN_ID: ${{ secrets.CHAIN_ID }}
      EXPLORER_URL: ${{ secrets.EXPLORER_URL }}
      DISPLAY_NAME: ${{ secrets.DISPLAY_NAME }}
      SYMBOL: ${{ secrets.SYMBOL }}
      SYMBOL_ETH: ${{ secrets.SYMBOL_ETH }}
      SYMBOL_LMR: ${{ secrets.SYMBOL_LMR }}
      PROXY_ROUTER_URL: ${{ secrets.PROXY_ROUTER_URL }}
      COIN_DEFAULT_GAS_LIMIT: ${{ secrets.COIN_DEFAULT_GAS_LIMIT }}
      MAX_GAS_PRICE: ${{ secrets.MAX_GAS_PRICE }}
      LMR_DEFAULT_GAS_LIMIT: ${{ secrets.LMR_DEFAULT_GAS_LIMIT }}
      DEFAULT_GAS_PRICE: ${{ secrets.DEFAULT_GAS_PRICE }}
      REQUIRED_PASSWORD_ENTROPY: ${{ secrets.REQUIRED_PASSWORD_ENTROPY }}
      RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
      FAUCET_URL: ${{ secrets.FAUCET_URL }}
      ETH_NODE_ADDRESS_HTTP: ${{ vars.ETH_NODE_ADDRESS_HTTP }}
      ETH_NODE_ADDRESS_HTTP2: ${{ vars.ETH_NODE_ADDRESS_HTTP2 }}
      ETH_NODE_ADDRESS_HTTP3: ${{ vars.ETH_NODE_ADDRESS_HTTP3 }}
      TITAN_LIGHTNING_POOL: ${{ secrets.TITAN_LIGHTNING_POOL }}
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install packages
        run: npm install
      - name: Post install
        if: matrix.target == 'macos-arm'
        run: npm run postinstallMacDist
      - name: Set env from github
        run: |
          echo "CHAIN_ID=$CHAIN_ID" >> .env
          echo "DEV_TOOLS=true" >> .env
          echo "DISPLAY_NAME=$DISPLAY_NAME" >> .env
          echo "EXPLORER_URL=$EXPLORER_URL" >> .env
          echo "SYMBOL=$SYMBOL" >> .env
          echo "SYMBOL_ETH=$SYMBOL_ETH" >> .env
          echo "SYMBOL_LMR=$SYMBOL_LMR" >> .env
          echo "PROXY_ROUTER_URL=$PROXY_ROUTER_URL" >> .env
          echo "COIN_DEFAULT_GAS_LIMIT=$COIN_DEFAULT_GAS_LIMIT" >> .env
          echo "MAX_GAS_PRICE=$MAX_GAS_PRICE" >> .env
          echo "LMR_DEFAULT_GAS_LIMIT=$LMR_DEFAULT_GAS_LIMIT" >> .env
          echo "DEFAULT_GAS_PRICE=$DEFAULT_GAS_PRICE" >> .env
          echo "REQUIRED_PASSWORD_ENTROPY=$REQUIRED_PASSWORD_ENTROPY" >> .env
          echo "RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY" >> .env
          echo "FAUCET_URL=$FAUCET_URL" >> .env
          echo "NODE_ENV=production" >> .env
          echo "ETH_NODE_ADDRESS_HTTP=$ETH_NODE_ADDRESS_HTTP" >> .env
          #echo "ETH_NODE_ADDRESS_HTTP2=$ETH_NODE_ADDRESS_HTTP2" >> .env
          #echo "ETH_NODE_ADDRESS_HTTP3=$ETH_NODE_ADDRESS_HTTP3" >> .env
          echo "TITAN_LIGHTNING_POOL=$TITAN_LIGHTNING_POOL" >> .env
        shell: bash
      - name: Build
        run: npm run web-build
      - name: Publish Mac
        if: matrix.target == 'macos'
        run: npm run r -- --c.extraMetadata.version=${{github.ref_name}} -m
      - name: Publish Mac arm
        if: matrix.target == 'macos-arm'
        run: npm run r -- --c.extraMetadata.version=${{github.ref_name}} -m --arm64
      - name: Publish Linux
        if: matrix.target == 'ubuntu'
        run: npm run r -- --c.extraMetadata.version=${{github.ref_name}} -l
      - name: Publish Windows
        if: matrix.target == 'windows'
        run: npm run r -- --c.extraMetadata.version=${{github.ref_name}} -w